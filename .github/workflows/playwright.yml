name: Playwright Tests
on:
  workflow_run:
    workflows: [Build Boop]
    types:
      - completed
  workflow_dispatch:

jobs:
  check-dependency:
    name: Check Dependency
    runs-on: ubuntu-latest
    steps:
      - name: Fail if not triggered by build workflow
        if: github.event_name == 'workflow_dispatch' && github.event.workflow_run == null
        run: |
          echo "This workflow must be triggered by the 'Build React App' workflow."
          echo "Manual runs are allowed only for debugging purposes when you're certain a successful build exists."
          exit 1
      
      - name: Fail if build workflow failed
        if: github.event.workflow_run != null && github.event.workflow_run.conclusion != 'success'
        run: |
          echo "The 'Build React App' workflow did not complete successfully."
          echo "This workflow requires a successful build."
          exit 1
      
      - name: Dependency check passed
        run: echo "Dependency check passed, proceeding with tests."

  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    needs: check-dependency
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Download build artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            const buildArtifact = artifacts.data.artifacts.find(artifact => artifact.name === "build-output");
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: buildArtifact.id,
              archive_format: 'zip'
            });
            require('fs').writeFileSync('build-output.zip', Buffer.from(download.data));
        
      - name: Extract build artifact
        run: |
          mkdir -p build
          unzip build-output.zip -d build
      - name: Run Playwright tests
        run: pnpm exec playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5
